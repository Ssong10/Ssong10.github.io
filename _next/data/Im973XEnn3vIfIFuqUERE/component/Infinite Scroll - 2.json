{"pageProps":{"params":{"id":"Infinite Scroll - 2"},"code":{"html":"<div id=\"app\"></div>\n<div class=\"footer\"></div>","js":"const $app = document.querySelector('#app')\nconst $footer = document.querySelector('.footer')\n\nconst getList = (count) => {\n  return new Promise(resolve => {\n    setTimeout(() => {\n      const data = Array.from({length:5}).map((_,idx)=>{\n        const id = (count*5)+idx+1\n        return {id, data: `${id}번째 게시글입니다`}\n      })\n      resolve(data)\n    },1000)\n  })\n}\n\nconst renderItem = ({id, data}) => {\n  const item = document.createElement('li')\n  item.innerHTML = `\n    <div class=\"item-id\">${id}</div>\n    <div class=\"item-data\">${data}</div>\n  `\n  return item\n}\nlet count = 0\nconst fetchMore = async () => {\n  $footer.classList.add(\"loading\");\n  const list = await getList(count ++)\n  const frag = document.createDocumentFragment()\n  list.forEach(item=> {\n    frag.appendChild(renderItem(item))\n  })\n  $app.appendChild(frag)\n  $footer.classList.remove(\"loading\");\n}\n\nconst observer = new IntersectionObserver(entries => {\n  entries.forEach(entry => {\n    if (entry.isIntersecting){\n      fetchMore()\n    }\n  })\n})\n\nobserver.observe($footer)","css":".footer {\n  height : 50px;\n  line-height: 50px;\n  text-align:center;\n}\n\n#app li {\n  display:flex;\n  margin: 10px;\n  border:1px solid black;\n  height : 20vh;\n  text-align :center;\n  line-height: 20vh\n}\n.item-id {\n  border-right: 1px solid black;\n  width : 20%;\n}\n.item-data {\n  width : 80%;\n}\n\n.loading:after {\n  content: \"... 로딩중 ...\";\n}"},"description":""},"__N_SSG":true}